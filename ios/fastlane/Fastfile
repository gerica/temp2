default_platform(:ios)

APP_STORE_CONNECT_TEAM_ID = ENV["APP_STORE_CONNECT_TEAM_ID"]
DEVELOPER_PORTAL_TEAM_ID = ENV["DEVELOPER_PORTAL_TEAM_ID"]
FASTLANE_USER = ENV["FASTLANE_USER"]
FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD = ENV["FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD"]
MATCH_PASSWORD = ENV["MATCH_PASSWORD"]

DEVELOPER_APP_ID = ENV["DEVELOPER_APP_ID"]
DEVELOPER_APP_IDENTIFIER = ENV["DEVELOPER_APP_IDENTIFIER"]
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]
TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]

APPLE_ISSUER_ID = ENV["APPLE_ISSUER_ID"]
APPLE_KEY_ID = ENV["APPLE_KEY_ID"]
APPLE_KEY_CONTENT = ENV["APPLE_KEY_CONTENT"]
GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

def log()
    puts "APP_STORE_CONNECT_TEAM_ID: "+ (APP_STORE_CONNECT_TEAM_ID || "")
    puts "DEVELOPER_PORTAL_TEAM_ID: "+ (DEVELOPER_PORTAL_TEAM_ID || "")
    puts "FASTLANE_USER: "+ (FASTLANE_USER || "")
    puts "FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: "+ (FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD || "")
    puts "MATCH_PASSWORD: "+ (MATCH_PASSWORD || "")
    puts "DEVELOPER_APP_ID: "+ (DEVELOPER_APP_ID || "")
    puts "DEVELOPER_APP_IDENTIFIER: "+ (DEVELOPER_APP_IDENTIFIER || "")
    puts "PROVISIONING_PROFILE_SPECIFIER: "+ (PROVISIONING_PROFILE_SPECIFIER || "")
    puts "TEMP_KEYCHAIN_USER: "+ (TEMP_KEYCHAIN_USER || "")
    puts "TEMP_KEYCHAIN_PASSWORD: "+ (TEMP_KEYCHAIN_PASSWORD || "")
    puts "APPLE_ISSUER_ID: "+ (APPLE_ISSUER_ID || "")
    puts "APPLE_KEY_ID: "+ (APPLE_KEY_ID || "")
    puts "APPLE_KEY_CONTENT: "+(APPLE_KEY_CONTENT || "")
    puts "GIT_AUTHORIZATION: "+(GIT_AUTHORIZATION.length.to_s || "")
    puts "GIT_AUTHORIZATION: "+(GIT_AUTHORIZATION.split("").to_s || "")
    puts "GIT_AUTHORIZATION: "+(GIT_AUTHORIZATION.split("").join("") || "")
end

platform :ios do
  lane :closed_beta do
    keychain_name = TEMP_KEYCHAIN_USER
    keychain_password = TEMP_KEYCHAIN_PASSWORD
    ensure_temp_keychain(keychain_name, keychain_password)
    log()
    api_key = app_store_connect_api_key(
      key_id: APPLE_KEY_ID,
      issuer_id: APPLE_ISSUER_ID,
      key_content: APPLE_KEY_CONTENT,
      duration: 1200,
      in_house: false,
      is_key_content_base64: true
    )

#     increment_build_number(xcodeproj: "Runner.xcodeproj")
#     cocoapods(
#       clean_install: true
#     )

    match(
      app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
      readonly: true,
      type: 'appstore',
      git_basic_authorization: GIT_AUTHORIZATION,
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      api_key: api_key
    )

#     gym(
#       configuration: "Release",
#       workspace: "Runner.xcworkspace",
#       scheme: "Runner",
#       export_method: "app-store",
#       export_options: {
#         provisioningProfiles: {
#             DEVELOPER_APP_ID => PROVISIONING_PROFILE_SPECIFIER
#         }
#       }
#     )
#
#     pilot(
#       apple_id: "#{DEVELOPER_APP_ID}",
#       app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
#       skip_waiting_for_build_processing: true,
#       skip_submission: true,
#       distribute_external: false,
#       notify_external_testers: false,
#       ipa: "./Runner.ipa"
#     )

    delete_temp_keychain(keychain_name)
  end
  lane :test do
#     DEVELOPER_APP_IDENTIFIER = "123"
#     puts "DEVELOPER_APP_IDENTIFIER: "+DEVELOPER_APP_IDENTIFIER
        log()
   end
end